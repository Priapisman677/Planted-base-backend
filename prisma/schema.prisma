// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  VISITOR
  ENGINEER
  WORKER
  MEDIC
  OVERVIEWER
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String
  salt      String
  //! Should make more specific roles for each type of "worker".
  role      Role     @default(VISITOR)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Item {
  id          Int         @id @default(autoincrement())
  name        String      @unique
  description String
  quantity    Int         @default(0)
  zone        String
  weight      Int
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  ItemToTag   ItemToTag[]

  // userId  Int
  // user     User   @relation(fields: [userId], references: [id])
  @@map("items")
}

model Tag {
  id        Int         @id @default(autoincrement())
  name      String
  ItemToTag ItemToTag[]

  @@map("tags")
}

model ItemToTag {
  tagId  Int
  tag    Tag  @relation(fields: [tagId], references: [id])
  itemId Int
  item   Item @relation(fields: [itemId], references: [id], onDelete: Cascade)

  @@id([tagId, itemId])
}
